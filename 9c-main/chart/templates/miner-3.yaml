apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: main-miner-3
  name: main-miner-3
  namespace: {{ $.Chart.Name }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: main-miner-3
  serviceName: main-miner-3
  template:
    metadata:
      labels:
        app: main-miner-3
      name: main-miner-3
    spec:
      initContainers:
      - args:
        - https://snapshots.nine-chronicles.com/main/partition
        - /data/miner
        - $(RESET_SNAPSHOT_OPTION)
        - main-miner-3
        - $(SLACK_WEBHOOK_URL)
        command:
        - /bin/download_snapshot.sh
        image: {{ $.Values.miner.image.repository }}:{{ $.Values.miner.image.tag }}
        name: reset-snapshot
        volumeMounts:
        - name: download-snapshot-script
          mountPath: /bin/download_snapshot.sh
          readOnly: true
          subPath: download_snapshot.sh
        - mountPath: /data
          name: main-miner-3-data
        env:
        - name: RESET_SNAPSHOT_OPTION
          value: "{{ $.Values.snapshot.resetSnapshot }}"
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: slack
              key: slack-webhook-url
      containers:
      - args:
        - NineChronicles.Headless.Executable.dll
        - run
        - --app-protocol-version={{ $.Values.appProtocolVersion }}
        - --trusted-app-protocol-version-signer={{ $.Values.trustedAppProtocolVersionSigner }}
        - --genesis-block-path={{ $.Values.genesisBlockPath }}
        {{- if $.Values.miner.useTurnServer }}
        {{- range $.Values.iceServers }}
        - --ice-server={{ . }}
        {{- end }}
        - --port={{ $.Values.miner.ports.headless }}
        - --no-miner=true
        - --store-path=/data/miner
        - --store-type=rocksdb
        - --swarm-private-key
        - $(PRIVATE_KEY)
        - --miner-private-key
        - $(PRIVATE_KEY)
        {{- range $.Values.peerStrings }}
        - --peer={{ . }}
        {{- end }}
        - --graphql-server
        - --graphql-host=0.0.0.0
        - --graphql-port={{ $.Values.miner.ports.graphql }}
        - --tx-life-time=10
        {{- with $.Values.miner.extraArgs }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        - --network-type={{ $.Values.networkType }}
        command:
          - dotnet
        env:
          - name: PRIVATE_KEY
            valueFrom:
              secretKeyRef:
                key: miner-private-key-3
                name: private-keys
          {{- with $.Values.miner.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
        image: {{ $.Values.miner.image.repository }}:{{ $.Values.miner.image.tag }}
        imagePullPolicy: IfNotPresent
        name: main-miner-3
        ports:
        - containerPort: {{ $.Values.miner.ports.headless }}
          name: headless
          protocol: TCP
        - containerPort: {{ $.Values.miner.ports.graphql }}
          name: graphql
          protocol: TCP
        resources:
          requests:
            cpu: 1
            memory: 6Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: main-miner-3-data
      nodeSelector:
        node.kubernetes.io/instance-type: m5.large
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: acr-regcred
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 448
          name: {{ $.Chart.Name }}-probe-script
        name: probe-script
      - name: download-snapshot-script
        configMap:
          defaultMode: 0700
          name: {{ $.Chart.Name }}-download-snapshot-script
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: main-miner-3-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ $.Values.miner.storage.data }}
      storageClassName: {{ $.Chart.Name }}-gp3
      volumeMode: Filesystem
---
{{ end }}
