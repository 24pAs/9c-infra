apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: main-miner-2
    app.kubernetes.io/instance: {{ $.Chart.Name }}
  name: main-miner-2
  namespace: {{ $.Chart.Name }}
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: main-miner-2
  serviceName: main-miner-2
  template:
    metadata:
      labels:
        app: main-miner-2
      name: main-miner-2
    spec:
      containers:
      - args:
        - NineChronicles.Headless.Executable.dll
        - run
        - --app-protocol-version={{ $.Values.appProtocolVersion }}
        - --trusted-app-protocol-version-signer={{ $.Values.trustedAppProtocolVersionSigner }}
        - --genesis-block-path={{ $.Values.genesisBlockPath }}
        {{- if $.Values.miner.useTurnServer }}
        {{- range $.Values.iceServers }}
        - --ice-server={{ . }}
        {{- end }}
        {{- else }}
        - --host=9c-main-miner-2.nine-chronicles.com
        {{- end }}
        - --port={{ $.Values.miner.ports.headless }}
        {{- if eq $.Values.consensusType "pow" }}
        - --no-miner=false
        {{- else }}
        - --no-miner=true
        {{- end }}
        - --store-path=/data/miner
        - --store-type=rocksdb
        - --swarm-private-key
        - $(PRIVATE_KEY)
        - --miner-private-key
        - $(PRIVATE_KEY)
        {{- range $.Values.peerStrings }}
        - --peer={{ . }}
        {{- end }}
        - --graphql-server
        - --graphql-host=0.0.0.0
        - --graphql-port={{ $.Values.miner.ports.graphql }}
        - --tx-life-time=10
        {{- with $.Values.miner.extraArgs }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        - --network-type={{ $.Values.networkType }}
        command:
          - dotnet
        env:
          - name: PRIVATE_KEY
            valueFrom:
              secretKeyRef:
                key: miner-private-key-2
                name: private-keys
          {{- with $.Values.miner.env }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
        image: {{ $.Values.miner.image.repository }}:{{ $.Values.miner.image.tag }}
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - /bin/liveness_probe.sh
          failureThreshold: 3
          initialDelaySeconds: 1800
          periodSeconds: 30
          timeoutSeconds: 30
        name: main-miner-2
        ports:
        - containerPort: {{ $.Values.miner.ports.headless }}
          name: headless
          protocol: TCP
        - containerPort: {{ $.Values.miner.ports.graphql }}
          name: graphql
          protocol: TCP
        resources:
          {{- toYaml $.Values.miner.resources | nindent 10 }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: main-miner-2-data
        - mountPath: /bin/liveness_probe.sh
          name: probe-script
          readOnly: true
          subPath: liveness_probe.sh
      nodeSelector:
        node.kubernetes.io/instance-type: c7g.4xlarge
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: acr-regcred
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 448
          name: {{ $.Chart.Name }}-probe-script
        name: probe-script
      - name: download-snapshot-script
        configMap:
          defaultMode: 0700
          name: {{ $.Chart.Name }}-download-snapshot-script
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      creationTimestamp: null
      name: main-miner-2-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ $.Values.miner.storage.data }}
      storageClassName: {{ $.Chart.Name }}-gp3
      volumeMode: Filesystem
