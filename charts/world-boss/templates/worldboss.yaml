{{- if $.Values.serviceAccount.create }}
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    eks.amazonaws.com/role-arn: {{ $.Values.serviceAccount.iamRole }}
  labels:
    app.kubernetes.io/instance: {{ $.Chart.Name }}
  name: {{ $.Values.serviceAccount.name }}
  namespace: {{ $.Values.namespace }}
{{- end }}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: world-boss-service
    app.kubernetes.io/instance: {{ $.Chart.Name }}
  name: world-boss-service
  namespace: {{ $.Values.namespace }}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: world-boss-service
  serviceName: world-boss-service
  template:
    metadata:
      labels:
        app: world-boss-service
    spec:
      containers:
        - args:
            - alembic upgrade head && uvicorn world_boss.wsgi:app --workers 8 --timeout-keep-alive 600 --host 0.0.0.0 --port 5000
          command:
            - /bin/sh
            - -c
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  key: database-url
                  name: world-boss-env
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  key: redis-host
                  name: world-boss-env
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  key: redis-port
                  name: world-boss-env
            - name: KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: kms-key-id
                  name: world-boss-env
            - name: SLACK_TOKEN
              valueFrom:
                secretKeyRef:
                  key: slack-token
                  name: world-boss-env
            - name: CELERY_BROKER_URL
              valueFrom:
                secretKeyRef:
                  key: celery-broker-url
                  name: world-boss-env
            - name: CELERY_RESULT_BACKEND
              valueFrom:
                secretKeyRef:
                  key: celery-result-backend
                  name: world-boss-env
            - name: SLACK_SIGNING_SECRET
              valueFrom:
                secretKeyRef:
                  key: slack-signing-secret
                  name: world-boss-env
            - name: GRAPHQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: graphql-password
                  name: world-boss-env
            - name: SLACK_CHANNEL_ID
              valueFrom:
                secretKeyRef:
                  key: slack-channel-id
                  name: world-boss-env
            - name: HEADLESS_URL
              valueFrom:
                secretKeyRef:
                  key: headless-url
                  name: world-boss-env
            - name: DATA_PROVIDER_URL
              valueFrom:
                secretKeyRef:
                  key: data-provider-url
                  name: world-boss-env
            - name: HEADLESS_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key: headless-jwt-secret
                  name: world-boss-env
            - name: HEADLESS_JWT_ISS
              valueFrom:
                secretKeyRef:
                  key: headless-jwt-iss
                  name: world-boss-env
            - name: HEADLESS_JWT_ALGORITHM
              valueFrom:
                secretKeyRef:
                  key: headless-jwt-algorithm
                  name: world-boss-env
          image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
          name: world-boss-service
          ports:
            - containerPort: 5000
      nodeSelector:
        node.kubernetes.io/instance-type: m5.large
      restartPolicy: Always
      serviceAccountName: {{ $.Values.serviceAccount.name }}
  updateStrategy:
    type: RollingUpdate

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: world-boss-worker
    app.kubernetes.io/instance: {{ $.Chart.Name }}
  name: world-boss-worker
  namespace: {{ $.Values.namespace }}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: world-boss-worker
  serviceName: world-boss-worker
  template:
    metadata:
      labels:
        app: world-boss-worker
    spec:
      containers:
        - args:
            - celery -A world_boss.app.tasks:celery worker -l DEBUG
          command:
            - /bin/sh
            - -c
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  key: database-url
                  name: world-boss-env
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  key: redis-host
                  name: world-boss-env
            - name: REDIS_PORT
              valueFrom:
                secretKeyRef:
                  key: redis-port
                  name: world-boss-env
            - name: KMS_KEY_ID
              valueFrom:
                secretKeyRef:
                  key: kms-key-id
                  name: world-boss-env
            - name: SLACK_TOKEN
              valueFrom:
                secretKeyRef:
                  key: slack-token
                  name: world-boss-env
            - name: CELERY_BROKER_URL
              valueFrom:
                secretKeyRef:
                  key: celery-broker-url
                  name: world-boss-env
            - name: CELERY_RESULT_BACKEND
              valueFrom:
                secretKeyRef:
                  key: celery-result-backend
                  name: world-boss-env
            - name: SLACK_SIGNING_SECRET
              valueFrom:
                secretKeyRef:
                  key: slack-signing-secret
                  name: world-boss-env
            - name: GRAPHQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: graphql-password
                  name: world-boss-env
            - name: SLACK_CHANNEL_ID
              valueFrom:
                secretKeyRef:
                  key: slack-channel-id
                  name: world-boss-env
            - name: HEADLESS_URL
              valueFrom:
                secretKeyRef:
                  key: headless-url
                  name: world-boss-env
            - name: DATA_PROVIDER_URL
              valueFrom:
                secretKeyRef:
                  key: data-provider-url
                  name: world-boss-env
            - name: HEADLESS_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  key: headless-jwt-secret
                  name: world-boss-env
            - name: HEADLESS_JWT_ISS
              valueFrom:
                secretKeyRef:
                  key: headless-jwt-iss
                  name: world-boss-env
            - name: HEADLESS_JWT_ALGORITHM
              valueFrom:
                secretKeyRef:
                  key: headless-jwt-algorithm
                  name: world-boss-env
          image: {{ $.Values.image.repository }}:{{ $.Values.image.tag }}
          name: world-boss-worker
          ports:
            - containerPort: 5000
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      serviceAccountName: {{ $.Values.serviceAccount.name }}
  updateStrategy:
    type: RollingUpdate
