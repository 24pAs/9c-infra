{{- if $.Values.dataProvider.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: data-provider
    app.kubernetes.io/instance: {{ $.Release.Name }}
  name: data-provider
  namespace: {{ $.Release.Name }}
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: data-provider
  serviceName: data-provider
  template:
    metadata:
      labels:
        app: data-provider
    spec:
      {{- if $.Values.global.resetSnapshot }}
      initContainers:
      - args:
        - https://snapshots.nine-chronicles.com/{{ $.Values.snapshot.path }}
        - {{ $.Values.dataProvider.storePath | default "/data/data-provider" }}
        - $(RESET_SNAPSHOT_OPTION)
        - data-provider
        - $(SLACK_WEBHOOK_URL)
        command:
        - /bin/download_snapshot.sh
        {{- if and $.Values.dataProvider.image.repository $.Values.dataProvider.image.tag }}
        image: {{ $.Values.dataProvider.image.repository }}:{{ $.Values.dataProvider.image.tag }}
        {{- else }}
        image: {{ $.Values.global.image.repository }}:{{ $.Values.global.image.tag }}
        {{- end }}
        volumeMounts:
        - name: download-snapshot-script
          mountPath: /bin/download_snapshot.sh
          readOnly: true
          subPath: download_snapshot.sh
        - mountPath: /data
          name: data-provider-data
        name: reset-snapshot
        env:
        - name: RESET_SNAPSHOT_OPTION
          value: "{{ $.Values.global.resetSnapshot }}"
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: slack
              key: slack-webhook-url
      {{- end }}
      containers:
      - args:
        - /bin/check_chain_tip.sh $(DP_HOST) $(DP_USER) $(DP_TOKEN) $(DP_PORT) $(DP_DATABASE) $(RESET_SNAPSHOT_OPTION)
          && /app/NineChronicles.DataProvider.Executable
          {{- if $.Values.global.headlessAppsettingsPath }}
          --config-path={{ $.Values.global.headlessAppsettingsPath }}
          {{- end }}
        command:
        - /bin/sh
        - -c
        env:
        - name: NC_StorePath
          value: {{ $.Values.dataProvider.storePath | default "/data/data-provider" }}
        - name: NC_AppProtocolVersionToken
          value: {{ $.Values.global.appProtocolVersion }}
        - name: NC_Confirmations
          value: '0'
        {{ range $idx, $peer := $.Values.global.peerStrings }}
        - name: NC_PeerStrings__{{ $idx }}
          value: {{ $peer }}
        {{ end }}
        - name: NC_Preload
          value: 'false'
        - name: NC_NoMiner
          value: 'true'
        - name: NC_Render
          value: "{{ $.Values.dataProvider.render }}"
        - name: NC_Planet
          value: "{{ $.Values.global.planet }}"
        - name: NC_TrustedAppProtocolVersionSigners__0
          value: {{ $.Values.global.trustedAppProtocolVersionSigner }}
        - name: NC_GenesisBlockPath
          value: {{ $.Values.global.genesisBlockPath }}
        - name: NC_BlockInsertInterval
          value: '10'
        - name: NC_BlockIndexFilePath
          value: /data
        - name: NC_TxLifeTime
          value: '10'
        - name: NC_MySqlConnectionString
          valueFrom:
            secretKeyRef:
              key: write-value
              name: data-provider
        - name: DP_HOST
          valueFrom:
            secretKeyRef:
              key: write-host
              name: data-provider
        - name: DP_USER
          valueFrom:
            secretKeyRef:
              key: user
              name: data-provider
        - name: DP_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: data-provider
        - name: DP_PORT
          valueFrom:
            secretKeyRef:
              key: port
              name: data-provider
        - name: DP_DATABASE
          valueFrom:
            secretKeyRef:
              key: database
              name: data-provider
        - name: RESET_SNAPSHOT_OPTION
          value: "{{ $.Values.global.resetSnapshot }}"
        {{- with $.Values.dataProvider.env }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        image: {{ $.Values.dataProvider.image.repository }}:{{ $.Values.dataProvider.image.tag }}
        imagePullPolicy: {{ $.Values.dataProvider.image.pullPolicy }}
        livenessProbe:
          exec:
            command:
            - /bin/bash
            - -c
            - "set -e\nlast_block=\"$(\n  curl \\\n    -H 'Content-Type: application/json'\
              \ \\\n    --data '{\"query\":\"query{chainQuery{blockQuery{blocks(desc:true,limit:1){timestamp}}}}\"\
              }' \\\n    http://localhost:80/graphql_headless \\\n  | jq -r '.data.chainQuery.blockQuery.blocks[0].timestamp'\n\
              )\"\nlast_timestamp=\"$(date +%s -u --date=\"$last_block\")\"\nnow=\"\
              $(date +%s -u)\"\n[[ $(( now - last_timestamp )) -lt 360 ]]\n"
          initialDelaySeconds: 1800
          periodSeconds: 60
          timeoutSeconds: 60
        name: data-provider
        ports:
        - containerPort: 80
          name: graphql
          protocol: TCP
        - containerPort: 31234
          name: headless
          protocol: TCP
        {{- with $.Values.dataProvider.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /bin/check_chain_tip.sh
          name: data-provider-script-volume
          readOnly: true
          subPath: check_chain_tip.sh
        - mountPath: /data
          name: data-provider-data
      {{- with $.Values.dataProvider.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: data-provider-script-volume
        configMap:
          defaultMode: 488
          name: {{ $.Release.Name }}-data-provider-script
      - name: download-snapshot-script
        configMap:
          defaultMode: 0700
          name: {{ $.Release.Name }}-download-snapshot-script
      - name: data-provider-data
        persistentVolumeClaim:
          claimName: {{ $.Values.dataProvider.storage.volumeName }}
  updateStrategy:
    type: RollingUpdate
{{- end }}
