{{ if $.Values.snapshot.partition.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: snapshot-volume-partition
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    {{- if eq $.Values.provider "AWS" }}
    volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    {{- else if eq $.Values.provider "RKE2" }}
    volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io
    volume.kubernetes.io/storage-provisioner: driver.longhorn.io
    {{- end }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ default "100Gi" $.Values.snapshot.storage }}
  {{- if eq $.Values.provider "AWS" }}
  storageClassName: {{ $.Release.Name }}-gp3
  {{- else if eq $.Values.provider "RKE2" }}
  storageClassName: {{ $.Release.Name }}-longhorn
  {{- end }}
  volumeMode: Filesystem
{{ end }}

---
{{ if $.Values.snapshot.fullSnapshot.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: snapshot-volume-full
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ default "100Gi" $.Values.snapshot.storage }}
  storageClassName: {{ $.Release.Name }}-gp3
  volumeMode: Filesystem
{{ end }}
