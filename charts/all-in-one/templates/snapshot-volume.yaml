{{- if $.Values.snapshot.partition.enabled }}
{{- if and (eq $.Values.provider "RKE2") (eq $.Release.Name "odin") }}
apiVersion: v1
kind: PersistentVolume
metadata:
  name: snapshot-volume-partition
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io
    volume.kubernetes.io/storage-provisioner: driver.longhorn.io
spec:
  capacity:
    storage: {{ default "100Gi" $.Values.snapshot.storage }}
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: odin-longhorn
  hostPath:
    path: /data
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - 9c-main-baremetal-1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: snapshot-volume-partition
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io
    volume.kubernetes.io/storage-provisioner: driver.longhorn.io
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ default "100Gi" $.Values.snapshot.storage }}
  volumeName: snapshot-volume-partition
  storageClassName: odin-longhorn
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: snapshot-volume-output
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io
    volume.kubernetes.io/storage-provisioner: driver.longhorn.io
spec:
  capacity:
    storage: {{ default "240Gi" $.Values.snapshot.outputStorage }}
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: odin-longhorn
  hostPath:
    path: /output
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - 9c-main-baremetal-1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: snapshot-volume-output
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: driver.longhorn.io
    volume.kubernetes.io/storage-provisioner: driver.longhorn.io
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ default "300Gi" $.Values.snapshot.outputStorage }}
  volumeName: snapshot-volume-output
  storageClassName: odin-longhorn
  volumeMode: Filesystem
{{- else }}

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: snapshot-volume-partition
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ default "100Gi" $.Values.snapshot.storage }}
  storageClassName: {{ $.Release.Name }}-gp3
  volumeMode: Filesystem
{{- end }}
{{- end }}

---
{{ if $.Values.snapshot.fullSnapshot.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: snapshot-volume-full
  namespace: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/instance: {{ $.Release.Name }}
  annotations:
    volume.beta.kubernetes.io/storage-provisioner: ebs.csi.aws.com
    volume.kubernetes.io/storage-provisioner: ebs.csi.aws.com
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ default "100Gi" $.Values.snapshot.storage }}
  storageClassName: {{ $.Release.Name }}-gp3
  volumeMode: Filesystem
{{ end }}
