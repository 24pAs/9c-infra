{{- if $.Values.gateway.enabled }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik-{{ $.Release.Name }}
  namespace: argocd
spec:
  project: default
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
  destination:
    server: https://kubernetes.default.svc
    namespace: {{ $.Release.Name }}
  source:
    repoURL: https://github.com/traefik/traefik-helm-chart/
    path: traefik
    targetRevision: b8725498c2445da8ecc06f156ca69ddc1a56cce4
    helm:
      values: |
        image:
          tag: v3.2.0-rc2
        ingressClass:
          enabled: false
        providers:
          kubernetesIngress:
            enabled: false
          kubernetesCRD:
            enabled: false
          kubernetesGateway:
            enabled: true
            experimentalChannel: true
            labelselector: app.kubernetes.io/instance=traefik-{{ $.Release.Name }}
        gatewayClass:
          name: traefik-{{ $.Release.Name }}
        globalArguments:
          - --providers.kubernetesgateway.statusaddress.service.name=traefik-{{ $.Release.Name }}
          - --providers.kubernetesgateway.statusaddress.service.namespace={{ $.Release.Name }}
        service:
          annotations:
            {{- toYaml $.Values.global.service.annotations | nindent 12 }}
        ports:
          websecure:
            targetPort: web
          {{- range $name, $config := $.Values.gateway.ports }}
          {{ $name }}:
            port: {{ $config.port }}
            expose:
              default: true
            {{- with $config.transport }}
            transport:
              {{- toYaml . | nindent 14 }}
            {{- end }}
          {{- end }}
        gateway:
          listeners:
            web:
              port: 8000
              protocol: HTTP
            {{- range $name, $config := $.Values.gateway.ports }}
            {{ $name }}:
              port: {{ $config.port }}
              protocol: {{ eq $config.kind "TCPRoute" | ternary "TCP" "HTTP" }}
            {{- end }}
---
{{- range $service := $.Values.gateway.services }}
{{- range $protocol := $service.protocols | default (list "web") }}
{{- range $p, $obj := merge (dict "web" dict) ($.Values.gateway.ports) }}
{{- if eq $protocol $p }}
---
apiVersion: gateway.networking.k8s.io/v1{{ if eq $obj.kind "TCPRoute" }}alpha2{{ end }}
kind: {{ $obj.kind | default "HTTPRoute" }}
metadata:
  name: gateway-route-{{ $service.name }}-{{ $protocol }}
  namespace: {{ $.Release.Name }}
  annotations:
    {{- if eq $obj.kind "TCPRoute" }}
    {{- with $service.hostname }}
    external-dns.alpha.kubernetes.io/hostname: {{ . }}
    external-dns.alpha.kubernetes.io/ttl: '60'
    {{- end }}
    {{- end }}
spec:
  parentRefs:
  - name: traefik-gateway
    namespace: {{ $.Release.Name }}
    sectionName: {{ $protocol }}
  {{- if not (eq $obj.kind "TCPRoute") }}
  hostnames:
    {{- with ($service.hostnames | default (list $service.hostname)) }}
    {{ toYaml . | nindent 4 }}
    {{- end }}
  {{- end }}
  rules:
    - backendRefs:
      {{- range $ref := $service.backendRefs | default (list dict) }}
      - name: {{ $ref.name | default $service.name }}
        port: {{ $ref.port | default $obj.port | default "80" }}
      {{- end }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}
---
{{- end }}
