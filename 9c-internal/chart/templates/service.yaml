{{ range $idx := until (int .Values.seed.count) }}
{{ $index := add $idx 1 }}
apiVersion: v1
kind: Service
metadata:
  name: tcp-seed-{{ $index }}
  namespace: {{ $.Chart.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
spec:
  ports:
  - port: {{ $.Values.seed.ports.node }}
    targetPort: {{ $.Values.seed.ports.node }}
    name: node
  {{- if $.Values.pos.enabled }}
  - port: {{ $.Values.pos.port }}
    targetPort: {{ $.Values.pos.port }}
    name: gossip
  {{- end }}
  selector:
    app: tcp-seed-{{ $index }}
  type: LoadBalancer
---
{{ end }}

{{ range $idx := until (int .Values.miner.count) }}
{{ $index := add $idx 1 }}
apiVersion: v1
kind: Service
metadata:
  name: miner-{{ $index }}
  namespace: {{ $.Chart.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
spec:
  ports:
  - port: {{ $.Values.miner.ports.headless }}
    targetPort: {{ $.Values.miner.ports.headless }}
    name: headless
  - port: {{ $.Values.miner.ports.graphql }}
    targetPort: {{ $.Values.miner.ports.graphql }}
    name: gql
  {{- if $.Values.pos.enabled }}
  - port: {{ $.Values.pos.port }}
    targetPort: {{ $.Values.pos.port }}
    name: gossip
  {{- end }}
  selector:
    app: miner-{{ $index }}
  type: LoadBalancer

---
{{ end }}

{{ range $idx := until (int .Values.remoteHeadless.count) }}
{{ $index := add $idx 1 }}

apiVersion: v1
kind: Service
metadata:
  name: remote-headless-{{ $index }}
  namespace: {{ $.Chart.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
spec:
  ports:
  - name: graphql
    port: {{ $.Values.remoteHeadless.ports.graphql }}
    targetPort: {{ $.Values.remoteHeadless.ports.graphql }}
  - name: rpc
    port: {{ $.Values.remoteHeadless.ports.rpc }}
    targetPort: {{ $.Values.remoteHeadless.ports.rpc }}
  - name: headless
    port: {{ $.Values.remoteHeadless.ports.headless }}
    targetPort: {{ $.Values.remoteHeadless.ports.headless }}
  selector:
    app: remote-headless-{{ $index }}
  type: LoadBalancer

---
{{ end }}

{{ if .Values.dataProvider.enabled }}

apiVersion: v1
kind: Service
metadata:
  name: data-provider
spec:
  ports:
  - name: graphql
    port: 80
    targetPort: 80
  selector:
    app: data-provider
  type: LoadBalancer

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: data-provider-db
  name: data-provider-db
spec:
  ports:
    - name: "3306"
      port: 3306
      targetPort: 3306
  selector:
    app: data-provider-db
  type: LoadBalancer

---
{{ end }}

apiVersion: v1
kind: Service
metadata:
  name: explorer
  namespace: {{ $.Chart.Name }}
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
spec:
  ports:
  - name: graphql
    port: {{ $.Values.explorer.ports.graphql }}
    targetPort: {{ $.Values.explorer.ports.graphql }}
  - name: headless
    port: {{ $.Values.explorer.ports.headless }}
    targetPort: {{ $.Values.explorer.ports.headless }}
  selector:
    app: explorer
  type: LoadBalancer

---
