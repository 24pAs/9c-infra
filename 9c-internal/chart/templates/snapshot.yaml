apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: snapshot
  namespace: default
spec:
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
          - args:
            - https://snapshots.nine-chronicles.com/internal
            - /data/headless
            - $(RESET_SNAPSHOT_OPTION)
            - snapshot
            - $(SLACK_TOKEN)
            command:
            - /bin/download_snapshot.sh
            image: bash:latest
            name: reset-snapshot
            volumeMounts:
            - name: script-volume
              mountPath: /bin/download_snapshot.sh
              readOnly: true
              subPath: download_snapshot.sh
            - mountPath: /data
              name: snapshot-volume
            env:
            - name: RESET_SNAPSHOT_OPTION
              value: "{{ $.Values.resetSnapshot }}"
            - name: SLACK_TOKEN
              valueFrom:
                secretKeyRef:
                  name: slack-token
                  key: slack-token
          - name: preload-headless
            image: {{ $.Values.remoteHeadless.image.repository }}:{{ $.Values.remoteHeadless.image.tag }}
            args:
            - $(APP_PROTOCOL_VERSION_KEY)
            - $(SLACK_TOKEN)
            command:
            - /bin/preload_headless.sh
            env:
            - name: APP_PROTOCOL_VERSION_KEY
              valueFrom:
                configMapKeyRef:
                  name: version-config
                  key: APP_PROTOCOL_VERSION
            - name: SLACK_TOKEN
              valueFrom:
                secretKeyRef:
                  name: slack-token
                  key: slack-token
            volumeMounts:
            - name: script-volume
              mountPath: /bin/preload_headless.sh
              readOnly: true
              subPath: preload_headless.sh
            - name: snapshot-volume
              mountPath: /data
          containers:
          - name: upload-snapshot
            image: bash:latest
            command:
            - echo "blahblah"
            volumeMounts:
            - name: script-volume
              mountPath: /bin/upload_snapshot.sh
              readOnly: true
              subPath: upload_snapshot.sh
            - name: snapshot-volume
              mountPath: /data
            - name: aws-keys
              mountPath: /secret
              readOnly: true
          restartPolicy: OnFailure
          volumes:
          - name: script-volume
            configMap:
              defaultMode: 0700
              name: snapshot-script
          - name: snapshot-volume
            persistentVolumeClaim:
              claimName: snapshot-volume
  schedule: 30 0 * * *
  successfulJobsHistoryLimit: 1

