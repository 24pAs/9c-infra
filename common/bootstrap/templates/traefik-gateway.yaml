{{- if .Values.traefik.enabled }}
apiVersion: v1
kind: Namespace
metadata:
  name: traefik
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
spec:
  project: default
  destination:
    server: https://kubernetes.default.svc
    namespace: traefik
  source:
    repoURL: https://github.com/traefik/traefik-helm-chart/
    path: traefik
    targetRevision: v32.1.0
    helm:
      values: |
        image:
          tag: v3.2.0-rc2
        globalArguments: []
        providers:
          kubernetesCRD:
            enabled: false
          kubernetesIngress:
            enabled: false
          kubernetesGateway:
            enabled: true
            experimentalChannel: true
        ingressClass:
          enabled: false
        gateway:
          enabled: false
        ports:
          websecure:
            targetPort: {{ .Values.traefik.ports.web.internal }}
            expose:
              default: true
              {{- range $planet := .Values.traefik.planets }}
              {{ $planet }}: true
              {{- end }}
          {{- range $service, $_portConfig := .Values.traefik.ports }}
          {{- $portConfig := kindIs "map" $_portConfig | ternary $_portConfig (dict "external" $_portConfig "internal" $_portConfig) }}
          {{- if kindIs "map" $portConfig.internal }}
          {{- range $planet, $port := $portConfig.internal }}
          {{ $service }}-{{ $planet }}:
            exposedPort: {{ $portConfig.external }}
            port: {{ $port }}
            expose:
              {{ $planet }}: true
          {{- end }}
          {{- else }}
          {{ $service }}:
            exposedPort: {{ $portConfig.external }}
            port: {{ $portConfig.internal }}
            expose:
              default: true
              {{- range $planet := $.Values.traefik.planets }}
              {{ $planet }}: true
              {{- end }}
          {{- end }}
          {{- end }}
        service:
          annotations: &service-annotations
            service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
            service.beta.kubernetes.io/aws-load-balancer-type: external
            {{- with .Values.traefik.awsLoadBalancerSslCert }}
            service.beta.kubernetes.io/aws-load-balancer-ssl-cert: {{ . }}
            service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
            {{- end }}
            {{- with .Values.traefik.awsLoadBalancerSubnets }}
            service.beta.kubernetes.io/aws-load-balancer-subnets: {{ . }}
            {{- end }}
          additionalServices:
            {{- range $planet := .Values.traefik.planets }}
            {{ $planet }}:
              annotations:
                <<: *service-annotations
            {{- end }}
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: traefik-gateway
  namespace: traefik
spec:
  gatewayClassName: traefik
  listeners:
    {{- range $service, $_portConfig := .Values.traefik.ports }}
    {{- $portConfig := kindIs "map" $_portConfig | ternary $_portConfig (dict "external" $_portConfig "internal" $_portConfig) }}
    {{- if kindIs "map" $portConfig.internal }}
    {{- range $planet, $port := $portConfig.internal }}
    - name: {{ $service }}-{{ $planet }}
      port: {{ $port }}
      protocol: {{ $portConfig.protocol | default "HTTP" }}
      allowedRoutes:
        namespaces:
          from: All
    {{- end }}
    {{- else }}
    - name: {{ $service }}
      port: {{ $portConfig.internal }}
      protocol: {{ $portConfig.protocol | default "HTTP" }}
      allowedRoutes:
        namespaces:
          from: All
    {{- end }}
    {{- end }}
---
{{- end }}
