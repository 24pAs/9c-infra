name: Prepare Release
on:
  workflow_dispatch:
    inputs:
      network:
        required: true
        description: 'Release network environment'
        default: 'internal'
        type: choice
        options:
        - main
        - internal
      rc-number:
        required: true
        description: 'Rc number (e.g. 100310)'
      deploy-number:
        required: true
        description: 'Deploy number (e.g. 1)'
      sign:
        description: 'Code signing'
        default: 'false'
        type: choice
        options:
        - true
        - false
      launcher-commit:
        description: 'Specific launcher commit'
      player-commit:
        description: 'Specific player commit'


concurrency:
  group: prepare-release

jobs:
  prepare-release:
    runs-on: ubuntu-20.04
    environment:
      name: ${{ github.event.inputs.network }}
    steps:
      - uses: actions/checkout@v3

      - name: Prepare Release
        uses: planetarium/9c-toolbelt@init
        with:
          COMMAND: prepare
          ENV: test
          GITHUB_TOKEN: ${{ secrets.P_GITHUB_TOKEN }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          KEY_PASSPHRASE: ${{ secrets.KEY_PASSPHRASE }}
          KEY_ADDRESS: ${{ secrets.KEY_ADDRESS }}
          KEY_PRIVATE: ${{ secrets.KEY_PRIVATE }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          network: ${{ github.event.inputs.network }}
          rc_number: ${{ github.event.inputs.rc-number }}
          deploy_number: ${{ github.event.inputs.deploy-number }}
          launcher_commit: ${{ github.event.inputs.launcher-commit }}
          player_commit: ${{ github.event.inputs.player-commit }}

      - name: Mkdir and MV
        if: github.event.inputs.sign == 'true'
        shell: bash
        run: |
          mkdir unsigned
          mkdir signed

          mv output/${{ github.event.inputs.network }}/*/launcher/*/Nine\ Chronicles.exe unsigned/Nine\ Chronicles.exe
          mv output/${{ github.event.inputs.network }}/*/launcher/*/resources/app/publish/NineChronicles.Headless.Executable.exe unsigned/NineChronicles.Headless.Executable.exe
          mv output/${{ github.event.inputs.network }}/*/player/*/9c.exe unsigned/9c.exe

      - name: Sign Artifact
        if: github.event.inputs.sign == 'true'
        uses: Atralupus/actions-codesigner@develop
        with:
          command: batch_sign
          username: ${{secrets.ES_USERNAME}}
          password: ${{secrets.ES_PASSWORD}}
          credential_id: ${{secrets.ES_CREDENTIAL_ID}}
          totp_secret: ${{secrets.ES_TOTP_SECRET}}
          dir_path: ${GITHUB_WORKSPACE}/py-scripts/unsigned
          output_path: ${GITHUB_WORKSPACE}/py-scripts/signed/

      - name: MV and zip launcher
        if: github.event.inputs.sign == 'true'
        shell: bash
        run: |
          cp signed/Nine\ Chronicles.exe output/${{ github.event.inputs.network }}/*/launcher/*/
          cp signed/NineChronicles.Headless.Executable.exe output/${{ github.event.inputs.network }}/*/launcher/*/resources/app/publish/

          cd output/${{ github.event.inputs.network }}/*/launcher/*/
          zip -r Windows.zip .
          find . -type f ! -name 'Windows.zip' -execdir rm -R {} +

      - name: MV and zip player
        if: github.event.inputs.sign == 'true'
        shell: bash
        run: |
          cp signed/9c.exe output/${{ github.event.inputs.network }}/*/player/*/

          cd output/${{ github.event.inputs.network }}/*/player/*/
          zip -r Windows.zip .
          find . -type f ! -name 'Windows.zip' -execdir rm -R {} +

      - name: Upload Artifacts
        if: github.event.inputs.sign == 'true'
        run: aws s3 cp output s3://9c-release.planetariumhq.com/ --recursive
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
